/*
 *
 *  Config.js
 *  
 *  Used to configure the game, the map and the images
 *
 */


/* UNIT TILE WIDTH (smallest possible width) */
g_UnitTileWidth = 128;

/* UNIT TILE HEIGHT (smallest possible height) */
g_UnitTileHeight = 64;


/* Images(Images must be in the folder imgs).
 * Just write the character - name correspondence used in the map below
 *
 * "info1","info2","info3", "info4", "info5"
 * info1 -> Character it corresponds in the map
 * info2 -> image name in the imgs folder
 * info3 -> object width  
 * info4 -> object height 
 NOTE: info3,info4 are what we want them to be, not their actual width and height.
 e.g. a tree might have actual width 5 tiles long but we want it to be a 1x1 object
 so in that case we would enter "1", "1"
 * info5 -> whether it's a background tile or a building
 */
var g_loadedImages = [
    ["1", "dirt.png", "1", "1", "bg"],
    ["2", "icecream.png", "1", "1", "building"],
    ["3", "tile.png", "1", "1", "bg"],
    ["4", "tree.png", "1", "1", "tree"]
];


/*  Load your own map: 
 *  1) Create your map using Tiled and export it as map.csv
 *  2) run the following command in terminal:
 *       awk '{print "["$0"],"}' map.csv
 *  3) Copy Paste it here */
var g_charMap = [
[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,3,1,4,4,1,3,3,3,1,4,3,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,4,3,3,3,3,3,3,3,1,1,3,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,1,4,3,3,1,1,1,3,4,4,3,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,1,4,3,2,3,1,1,4,1,4,3,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,1,1,4,4,4,1,1,4,4,1,3,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1],
[3,4,1,1,4,4,4,1,1,4,1,4,3,2,2,3,2,2,3,3,1,1,1,3,3,3,1,1,1,1],
[3,4,4,4,4,2,3,3,3,4,4,1,3,2,2,3,2,2,3,3,1,1,1,2,2,2,1,1,1,1],
[3,3,3,3,3,2,2,2,3,3,1,4,3,2,2,3,2,2,3,3,1,1,1,2,2,2,1,1,1,1],
[3,3,3,3,3,2,2,2,3,3,4,1,3,2,2,3,2,2,3,3,1,1,1,3,3,3,1,1,1,1],
[3,2,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1],
[3,3,3,3,3,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,4,1,1,1],
[3,3,3,3,3,2,3,4,3,2,3,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,4,1,1,1],
[3,3,4,3,3,2,3,4,3,2,3,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,4,1,1,1],
[3,4,3,3,2,2,2,2,2,2,3,3,3,3,3,3,4,3,4,3,1,1,1,1,1,4,4,1,1,1],
[3,3,1,1,1,3,2,1,3,3,3,3,3,3,3,1,2,3,2,1,1,1,1,1,1,4,4,1,1,1],
[3,4,1,1,1,3,3,3,3,3,2,2,2,2,3,3,4,3,4,3,1,1,1,1,1,4,4,1,1,1],
[3,3,1,1,1,3,2,1,4,4,2,2,2,2,3,1,2,3,2,1,1,1,1,4,4,4,4,1,1,1],
[3,4,1,1,1,3,4,4,3,3,2,2,2,2,3,3,4,3,4,3,1,1,4,4,4,4,4,1,1,1],
[3,3,1,1,1,3,4,4,3,3,2,2,2,2,3,1,2,3,2,1,1,1,4,4,4,4,4,1,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,1,4,1,1,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,1,1,1,1,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,4,4,1,1,1,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,1,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,4,4,4,4,4,4,1,1],
[3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4,4,4],
[3,4,4,4,4,4,4,4,4,4,4,1,1,4,4,4,4,4,4,3,3,4,4,4,4,4,4,4,4,4],
[3,4,4,4,4,4,4,4,4,4,4,1,4,1,1,1,3,3,3,3,4,4,4,4,4,4,4,4,4,4],
[3,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],
[3,4,4,4,4,4,4,4,2,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],
];
